{
    "swagger": "2.0",
    "info": {
        "title": "Star Wars API",
        "version": "1.0.0",
        "description": "A RESTful API for Star Wars data including people, planets, vehicles, authentication, and favorites."
    },
    "basePath": "/api",
    "schemes": [ "http" ],
    "consumes": [ "application/json" ],
    "produces": [ "application/json" ],
    "paths": {
        "/people": {
            "get": {
                "summary": "Get all people",
                "responses": {
                    "200": { "description": "A list of people" }
                }
            }
        },
        "/planets": {
            "get": {
                "summary": "Get all planets",
                "responses": {
                    "200": { "description": "A list of planets" }
                }
            }
        },
        "/vehicles": {
            "get": {
                "summary": "Get all vehicles",
                "responses": {
                    "200": { "description": "A list of vehicles" }
                }
            }
        },
        "/auth/login": {
            "post": {
                "summary": "Login and get JWT token",
                "parameters": [
                    { "name": "body", "in": "body", "required": true, "schema": { "type": "object", "properties": { "email": { "type": "string" }, "password": { "type": "string" } } } }
                ],
                "responses": {
                    "200": { "description": "JWT token returned" },
                    "401": { "description": "Invalid credentials" }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "summary": "Sign up a new user",
                "parameters": [
                    { "name": "body", "in": "body", "required": true, "schema": { "type": "object", "properties": { "email": { "type": "string" }, "password": { "type": "string" }, "name": { "type": "string" } } } }
                ],
                "responses": {
                    "201": { "description": "User created" },
                    "400": { "description": "Invalid data or user exists" }
                }
            }
        },
        "/protected": {
            "get": {
                "summary": "Get current user info (JWT required)",
                "security": [ { "Bearer": [ ] } ],
                "responses": {
                    "200": { "description": "Current user info" },
                    "401": { "description": "Unauthorized" }
                }
            }
        },
        "/users/favorites": {
            "get": {
                "summary": "Get user's favorites (JWT required)",
                "security": [ { "Bearer": [ ] } ],
                "responses": {
                    "200": { "description": "List of favorites" },
                    "401": { "description": "Unauthorized" }
                }
            }
        },
        "/favorite/{type}/{id}": {
            "post": {
                "summary": "Add a favorite (JWT required)",
                "parameters": [
                    { "name": "type", "in": "path", "required": true, "type": "string" },
                    { "name": "id", "in": "path", "required": true, "type": "integer" }
                ],
                "security": [ { "Bearer": [ ] } ],
                "responses": {
                    "200": { "description": "Favorite added" },
                    "401": { "description": "Unauthorized" }
                }
            },
            "delete": {
                "summary": "Remove a favorite (JWT required)",
                "parameters": [
                    { "name": "type", "in": "path", "required": true, "type": "string" },
                    { "name": "id", "in": "path", "required": true, "type": "integer" }
                ],
                "security": [ { "Bearer": [ ] } ],
                "responses": {
                    "200": { "description": "Favorite removed" },
                    "401": { "description": "Unauthorized" }
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "JWT Authorization header using the Bearer scheme. Example: 'Authorization: Bearer {token}'"
        }
    }
}
